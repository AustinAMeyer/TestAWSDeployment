
version: 2.1

commands:
  destroy_enviroment:
    steps:
      - run:
        name: Destroy Enviroment
        command: |
          aws cloudformation delete-stack --stack-name "InfastructureCreation"
jobs:  
    create_infastructure:
    docker:
      - image: "amazon/aws-cli"
    steps:
      - run:
          name: Ensure backend infrastructure exist
          command: aws cloudformation create-stack --stack-name "InfastructureCreation" --template-body file://template.yml
    configure_infrastructure:
    docker:
      - image: "python:3.7-alpine3.11"
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["fa:c5:cc:7e:24:a8:cc:94:96:83:79:61:9b:8a:8e:90"]
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
      - run:
          name: Configure server
          command: |
            ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i inventory main.yml

    smoke_test:
      docker:
        - image: "alpine:latest"
      steps:
        - checkout
        - add_ssh_keys:
            fingerprints: ["fa:c5:cc:7e:24:a8:cc:94:96:83:79:61:9b:8a:8e:90"]
        - run: apk add --update curl
        - run:
            name: Can we contact the website?
            command: |
              sleep 30
              if curl -s --head "ec2-54-245-136-255.us-west-2.compute.amazonaws.com:3000" 
              then 
                echo "It worked!" 
                return 0 
              else 
                echo "It failed" 
                return 1 
              fi
        - destroy_environment
          when: on_fail

      

workflows:
  myWorkflow:
    jobs:
        - create_infastructure
        - configure_infrastructure:
            recuires: [create_infastructure]
        - smoke_test:
            requires: [configure_infrastructure]