
version: 2.1

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name prod-${CIRCLE_WORKFLOW_ID}
jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            yum -y install tar
            yum -y install gzip
      - run:
          name: Create Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name prod-${CIRCLE_WORKFLOW_ID} \
              --tags Name=udacity
      - run:
          name: "Get the IP Address of the Backend EC2 instance and create inventory"
          command: |
            echo -e "[web]\n" > ./.circleci/ansible/inventory.txt
            aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=udacity" \
            --query 'Reservations[*].Instances[*].PublicIpAddress' \
            --output text >> ./.circleci/ansible/inventory.txt
            cat ./.circleci/ansible/inventory.txt
      - persist_to_workspace:
          root: .circleci/ansible/        
          paths:
            - inventory.txt
      - destroy_environment

  configure_infrastructure:
    docker:
      - image: "python:3.7-alpine3.11"
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["fa:c5:cc:7e:24:a8:cc:94:96:83:79:61:9b:8a:8e:90"]
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
      - attach_workspace:
          at: .circleci/ansible/
      - run:
          name: Configure server
          command: |
            sleep 20
            ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i ./.circleci/ansible/inventory.txt main.yml
      - destroy_environment
      

  smoke_test:
    docker:
      - image: "alpine:latest"
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["fa:c5:cc:7e:24:a8:cc:94:96:83:79:61:9b:8a:8e:90"]
      - run: apk add --update curl
      - run:
          name: Can we contact the website?
          command: |
            sleep 60
            IPAddress=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=udacity" --query 'Reservations[*].Instances[*].PublicIpAddress' --output text)
            URLAddress=${IPAddress//[.]/-}
            if curl -s --head "ec2-${URLAddress}.us-west-2.compute.amazonaws.com:3000"
            then 
              echo "It worked!" 
              exit 0 
            else 
              echo "It failed" 
              exit 1 
            fi   
      - destroy_environment

workflows:
  myWorkflow:
    jobs:
        - create_infrastructure
        - configure_infrastructure:
            requires: [create_infrastructure]
        - smoke_test:
            requires: [configure_infrastructure]